package com.Design_pattern.Creational_Patterns.Singleton_Pattern.Lazy;
/*
JDK 版本：JDK1.5 起

是否 Lazy 初始化：是

是否多线程安全：是

实现难度：较复杂

描述：这种方式采用双锁机制，安全且在多线程情况下能保持高性能。
getInstance() 的性能对应用程序很关键。
 */
public class Singleton_DCL {
    private volatile static Singleton_DCL singletonDCL;
    private Singleton_DCL(){}
    public static Singleton_DCL getSingleton() {
    if (singletonDCL == null) {
        synchronized (Singleton_DCL.class) {
            if (singletonDCL == null) {
                singletonDCL = new Singleton_DCL();
            }  
        }  
    }  
    return singletonDCL;
    }  
}